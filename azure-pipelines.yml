trigger:
  - '*'
  
variables:
    buildConfiguration: 'Release'
  
stages:
  - stage: 'Build'
    displayName: 'Build the web application'
    jobs: 
    - job: 'Build'
      displayName: 'Build job'
      pool:
        vmImage: 'ubuntu-18.04'
        demands:
        - npm
  
      variables:
        wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
        dotnetSdkVersion: '3.1.300'
  
      steps:
      - task: UseDotNet@2
        displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
        inputs:
          version: '$(dotnetSdkVersion)'
  
      - task: Npm@1
        displayName: 'Run npm install'
        inputs:
          verbose: false
  
      - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
        displayName: 'Compile Sass assets'
  
      - task: gulp@1
        displayName: 'Run gulp tasks'
  
      - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
        displayName: 'Write build info'
        workingDirectory: $(wwwrootDir)
  
      - task: DotNetCoreCLI@2
        displayName: 'Restore project dependencies'
        inputs:
          command: 'restore'
          projects: '**/*.csproj'
  
      - task: DotNetCoreCLI@2
        displayName: 'Build the project - $(buildConfiguration)'
        inputs:
          command: 'build'
          arguments: '--no-restore --configuration $(buildConfiguration)'
          projects: '**/*.csproj'
  
      - task: DotNetCoreCLI@2
        displayName: 'Publish the project - $(buildConfiguration)'
        inputs:
          command: 'publish'
          projects: '**/*.csproj'
          publishWebProjects: false
          arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
          zipAfterPublish: true
  
      - publish: '$(Build.ArtifactStagingDirectory)'
        artifact: drop
  
  - stage: 'Deploy'
    displayName: 'Deploy the web application'
    dependsOn: Build
    jobs:
    - deployment: Deploy
      pool:
        vmImage: 'ubuntu-18.04'
      environment: dev
      variables:
      - group: Release
      strategy:
        runOnce:
          deploy:
            steps:
            - download: current
              artifact: drop
              condition:
              - task: AzureCLI@2
                inputs:
                  scriptType: 'batch'
                  scriptLocation: 'inlineScript'
                  inlineScript: |
                    az login --service-principal --username 9062c44e-7db5-414c-9bfc-4126c88cacd2 --password pjAshf8HWYXFfx.kC.dWWJIb0PWn8CB0IS --tenant 9acf6dd6-1978-4d9c-9a9c-c9be95245565  & 
                    az account set --subscription "ad7245e9-fcaa-4b37-a5c3-8ae951cc4bbc"  &
                    
                    ASP="devopslab_linux" \
                    ASPRG="DevOpsPractices-rg" \
                    NAME="mytest5637-app" \
                    RG="myetest5637-rg" \
                    ASPID="/subscriptions/ad7245e9-fcaa-4b37-a5c3-8ae951cc4bbc/resourceGroups/DevOpsPractices-rg/providers/Microsoft.Web/serverfarms/devopslab_linux" \  &
                    
                    &
                    
                    if az group show -n "$RG" -o none; then
                    echo "RG is Already created"
                    else 
                    echo "Creating" &
                    az group create -n "$RG" --location eastus &
                    az webapp create -g "$RG" -p $ASPID -n $NAME --runtime "DOTNETCORE|3.1" &
                    fi
            - task: AzureWebApp@1
              displayName: 'Azure App Service Deploy: website'
              inputs:
                azureSubscription: 'Resource Manager - Tailspin - Space Game'
                appName: '$(WebAppName)'
                package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'
    